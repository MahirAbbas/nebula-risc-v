package nebula.decode

import spinal.core._

object Rvi extends AreaObject {
  import IntRegFileAccess._
  
  val ADD                = TypeR(M"0000000----------000-----0110011")
  val SUB                = TypeR(M"0100000----------000-----0110011")
  val SLL                = TypeR(M"0000000----------001-----0110011")
  val SLT                = TypeR(M"0000000----------010-----0110011")
  val SLTU               = TypeR(M"0000000----------011-----0110011")
  val XOR                = TypeR(M"0000000----------100-----0110011")
  val SRL                = TypeR(M"0000000----------101-----0110011")
  val SRA                = TypeR(M"0100000----------101-----0110011")
  val OR                 = TypeR(M"0000000----------110-----0110011")
  val AND                = TypeR(M"0000000----------111-----0110011")


  val ADDI               = TypeI(M"-----------------000-----0010011")
  val SLLI               = TypeI(M"000000-----------001-----0010011")
  val SLTI               = TypeI(M"-----------------010-----0010011")
  val SLTIU              = TypeI(M"-----------------011-----0010011")
  val XORI               = TypeI(M"-----------------100-----0010011")
  val SRLI               = TypeI(M"000000-----------101-----0010011")
  val SRAI               = TypeI(M"010000-----------101-----0010011")
  val ORI                = TypeI(M"-----------------110-----0010011")
  val ANDI               = TypeI(M"-----------------111-----0010011")


  val ADDW               = TypeR(M"0000000----------000-----0111011")
  val SUBW               = TypeR(M"0100000----------000-----0111011")
  val ADDIW              = TypeI(M"-----------------000-----0011011")

  val SLLW                = TypeR(M"0000000----------001-----0111011")
  val SRLW                = TypeR(M"0000000----------101-----0111011")
  val SRAW                = TypeR(M"0100000----------101-----0111011")
  val SLLIW               = TypeI(M"000000-----------001-----0011011")
  val SRLIW               = TypeI(M"000000-----------101-----0011011")
  val SRAIW               = TypeI(M"010000-----------101-----0011011")

  val LUI   = TypeU(M"-------------------------0110111")
  val AUIPC = TypeUPC(M"-------------------------0010111")


  val BEQ  =  TypeB(M"-----------------000-----1100011")
  val BNE  =  TypeB(M"-----------------001-----1100011")
  val BLT  =  TypeB(M"-----------------100-----1100011")
  val BGE  =  TypeB(M"-----------------101-----1100011")
  val BLTU =  TypeB(M"-----------------110-----1100011")
  val BGEU =  TypeB(M"-----------------111-----1100011")
  val JALR =  TypeI(M"-----------------000-----1100111")
  val JAL  =  TypeJ(M"-------------------------1101111")
}